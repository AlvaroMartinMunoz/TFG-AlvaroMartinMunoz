services:
  backend:
    build: ./backend
    command: >
      bash -c "
        echo 'Backend: Esperando que la BD esté lista...' &&
        echo 'Backend: Ejecutando makemigrations...' &&
        python manage.py makemigrations &&
        echo 'Backend: Ejecutando migrate...' &&
        python manage.py migrate &&
        echo 'Backend: Iniciando servidor Django...' &&
        python manage.py runserver 0.0.0.0:8000
      "
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
      - static_volume:/app/staticfiles
      - ./backend/media:/app/media
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
    networks:
      - marketplace_net
    healthcheck:
    
      test: ["CMD-SHELL", "curl -f http://localhost:8000/ || exit 1"]
      interval: 15s 
      timeout: 5s   
      retries: 5    
      start_period: 40s 

  worker:
    build: ./backend
    command: >
      bash -c "
        echo 'Worker: Esperando que la BD esté lista...' &&
        echo 'Worker: Esperando que el servicio Backend esté saludable (migraciones completadas)...' &&
        echo 'Worker: Iniciando tareas (process_tasks)...' &&
        python manage.py process_tasks
      "
    env_file:
      - ./backend/.env
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
      backend:
        condition: service_healthy
    networks:
      - marketplace_net
    restart: unless-stopped

  frontend:
    build: ./frontend
    command: npm start
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    depends_on:
      - backend
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - marketplace_net

  db:
    image: postgres:13
    volumes:
      - db_data:/var/lib/postgresql/data/
    env_file:
      - ./backend/.env
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-marketplace_db}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
    ports:
      - "5432:5432"
    networks:
      - marketplace_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $${POSTGRES_USER:-postgres} -d $${POSTGRES_DB:-marketplace_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  static_volume: {}
  media_volume: {}
  db_data: {}

networks:
  marketplace_net:
    driver: bridge
